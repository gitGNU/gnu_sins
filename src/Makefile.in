# These directives are taken from the GNU coding standard

SHELL = /bin/sh

prefix = @prefix@
exec_prefix = @exec_prefix@
bindir = @bindir@
sysconfdir = @sysconfdir@
datadir = @datadir@/sins

# END-OF-GNU standard directives

CURSES_CFLAGS = @CURSES_CFLAGS@
VGA_CFLAGS = @VGA_CFLAGS@
VGA2_CFLAGS = @VGA2_CFLAGS@
X_CFLAGS = @X_CFLAGS@
LDFLAGS = -lm
DEFS = @DEFS@
CFLAGS = @CFLAGS@ -I. -DDEFAULT_SEARCHPATH='"${datadir}/pictset:~:."'
CC = @CC@
MODULES = mod_ai.o mod_human.o mod_wall.o

OBJ = main.o snake_move.o parse_input.o fruit.o common.o delay.o config.o modules.o arena.o messages.o snake.o cmdline.o command.o

all: @build_list@

main.o: main.c sins.h

snake_move.o: snake_move.c sins.h

parse_input.o: parse_input.c sins.h

fruit.o: fruit.c sins.h

common.o: common.c sins.h

delay.o: delay.c  sins.h

config.o: config.c  sins.h

modules.o: modules.c  sins.h

arena.o: arena.c  sins.h

messages.o: messages.c  sins.h

snake.o: snake.c  sins.h

cmdline.o: cmdline.c  sins.h

command.o: command.c sins.h

#--- MODS

mod_human.o: mod_human.c mod_human.h sins.h

mod_ai.o: mod_ai.c sins.h

mod_wall.o: mod_wall.c sins.h

#--- BINS

X-sins: $(OBJ) $(MODULES) ui_X.c sins.h
	$(CC) $(CFLAGS) $(X_CFLAGS) -o $@ $(OBJ) $(MODULES) ui_X.c $(LDFLAGS) 

curses-sins: $(OBJ) $(MODULES) ui_curses.c  sins.h
	$(CC) $(CFLAGS) $(CURSES_CFLAGS) -o $@ $(OBJ) $(MODULES) ui_curses.c $(LDFLAGS)

dumb-sins: $(OBJ) $(MODULES) ui_dumb.c sins.h
	$(CC) -o $@ $(CFLAGS) $(OBJ) $(MODULES) ui_dumb.c $(LDFLAGS)

ansi-sins: $(OBJ) $(MODULES) ui_ansi.c sins.h
	$(CC) -o $@ $(CFLAGS) $(OBJ) $(MODULES) ui_ansi.c $(LDFLAGS)

vga-sins: $(OBJ) $(MODULES) ui_vga.c sins.h
	$(CC) $(CFLAGS) $(VGA_CFLAGS) -o $@ $(OBJ) $(MODULES) ui_vga.c $(LDFLAGS)

vga2-sins: $(OBJ) $(MODULES) ui_vga2.c sins.h
	$(CC) $(CFLAGS) $(VGA2_CFLAGS) -o $@ $(OBJ) $(MODULES) ui_vga2.c $(LDFLAGS)

#--- UTILS

clean:
	rm -f *-sins core *.core *~ *.o

distclean: clean
	rm -f config.h config.cache config.status config.log

maintainer-clean: distclean
	rm -f Makefile

install: all

	# Install binaries
	install --mode=0755 -d ${bindir}
	install --strip --mode=0755 *-sins ${bindir}
	install --mode=0755 sins ${bindir}

	# Install data
	install --mode=0755 -d ${datadir}
	cp -R ../share/* ${datadir}

# This is just a reminder about building a library
sins_core.a: $(OBJ)
	ar -rc $@ $(OBJ) 
	ranlib $@


Makefile: Makefile.in configure.in
	./config.status
